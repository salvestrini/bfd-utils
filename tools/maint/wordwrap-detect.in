#! @PERL@
# -*- perl -*-

#
# wordwrap-detect.in
#
# Copyright (C) 2008, 2009 Francesco Salvestrini
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#

use strict;
use warnings;
use Getopt::Long;

(my $ME = $0) =~ s|.*/||;
my $VERSION = "0.1";

my $PACKAGE_NAME      = '@PACKAGE_NAME@';
my $PACKAGE_BUGREPORT = '@PACKAGE_BUGREPORT@';
my $PACKAGE_VERSION   = '@PACKAGE_VERSION@';

my $columns = 80;
my $tabsize = 8;

sub hint ($)
{
    my $string = shift;

    if (defined($string)) {
        print "$ME: " . $string . "\n";
    }
    print "Try `$ME --help' for more information.\n";
}

sub help ()
{
    print "Usage: $ME [OPTION]... FILE...\n";
    print "\n";
    print "    Check input file for wordwrapping.\n";
    print "\n";
    print "OPTIONS:\n";
    print "\n";
    print "    -c, --columns=NUM     specify wordwrapping limit (default $columns)\n";
    print "    -t, --tab-size=NUM    specify tab size (default $tabsize)\n";
    print "    -h, --help            display this help and exit\n";
    print "    -v, --version         output version information and exit\n";
    print "\n";
    print "Report bugs to <" . '@PACKAGE_BUGREPORT@' . ">\n";
}

sub version ()
{
    print "$ME $VERSION\n";
    print "Written by Francesco Salvestrini.\n";
    print "\n";
    print "This is free software; see the source for copying conditions.  There is NO\n";
    print "warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n";
}

{
    GetOptions(
        'h|help'       => sub { help(); exit(0); },
        'v|version'    => sub { print "$ME ($PACKAGE_NAME) $VERSION\n"; exit(0); },
        't|tab-size=i' => \$tabsize,
        'c|columns=i'  => \$columns,
        ) or hint("wrong parameters");

    if ($#ARGV < 0) {
        hint("missing arguments");
        exit 1;
    }

    if (!defined($tabsize)) {
        hint("missing --tab-size parameter");
        exit 1;
    }
    if ($tabsize <= 0) {
        hint("wrong --tab-size parameter");
        exit 1;
    }
    if (!defined($columns)) {
        hint("missing --columns parameter");
        exit 1;
    }
    if ($columns <= 0) {
        hint("wrong --columns parameter");
        exit 1;
    }

    for my $i (0 .. $#ARGV) {
        my $filename;
        my $filehandle;

        $filename = $ARGV[$i];

        if (!open($filehandle, "<", $filename)) {
            print STDERR "$ME: Cannot open \`" . $filename . "' for input\n";
            exit 1;
        }

        my $tab    = " " x $tabsize;
        my $lineno = 0;
        while (<$filehandle>) {
            $lineno++;

            my $line = $_;

            $line =~ s/\t/$tab/g;
            if (length($line) > $columns) {
                print STDERR
                    "$ME: File \`" . $filename . "' " .
                    "contains wordwrapping at line " . $lineno . "\n";
            }
        }

        close($filehandle);
    }
}

exit 0;
